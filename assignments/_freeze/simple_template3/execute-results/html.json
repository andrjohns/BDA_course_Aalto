{
  "hash": "3e2c073f27f81b645a7e6045e2988202",
  "result": {
    "markdown": "---\ntitle: \"Assignment 3\"\nauthor: anonymous # <-- hand in anonymously\nformat: \n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true  \n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:  \n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\neditor: source\n---\n\n\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n \n## Setup \n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nThis is the template for [assignment 3](assignment3.html). You can download the qmd-files ([full](./template3.qmd), [simple](./simple_template3.qmd)) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.** \n\nThe following will set-up [`markmyassignment`](https://github.com/MansMeg/markmyassignment) to check your functions at the end of the notebook:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(markmyassignment)){\n    install.packages(\"markmyassignment\")\n    library(markmyassignment)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: markmyassignment\n```\n:::\n\n```{.r .cell-code}\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment3.yml\", sep=\"\")\nset_assignment(assignment_path)    \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAssignment set:\nassignment3: Bayesian Data Analysis: Assignment 3\nThe assignment contain the following (6) tasks:\n- mu_point_est\n- mu_interval\n- mu_pred_interval\n- mu_pred_point_est\n- posterior_odds_ratio_point_est\n- posterior_odds_ratio_interval\n```\n:::\n:::\n\n\nThe following installs and loads the `aaltobda` package:\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(aaltobda)){\n    install.packages(\"remotes\")\n    remotes::install_github(\"avehtari/BDA_course_Aalto\", subdir = \"rpackage\", upgrade=\"never\")\n    library(aaltobda)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: aaltobda\n```\n:::\n:::\n\nThe following installs and loads the [`latex2exp` package](https://github.com/stefano-meschiari/latex2exp), which allows us to use LaTeX in plots:\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(latex2exp)){\n    install.packages(\"latex2exp\")\n    library(latex2exp)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: latex2exp\n```\n:::\n:::\n\n\n:::\n::::\n\n\n\n\n# Inference for normal mean and deviation (3 points) \n\nLoading the library and the data.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy1\")\n# The data are now stored in the variable `windshieldy1`.\n# The below displays the data:\nwindshieldy1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13.357 14.928 14.896 15.297 14.820 12.067 14.824 13.865 17.447\n```\n:::\n:::\n\nThe below data is **only for the tests**, you need to change to the\nfull data `windshieldy1` when reporting your results.\n\n::: {.cell}\n\n```{.r .cell-code}\nwindshieldy_test <- c(13.357, 14.928, 14.896, 14.820)\n```\n:::\n\n\n\n\n## (a)\n\n\nWrite your answers here! \n\n\n\n## (b)\n\n\nWrite your answers and code here! \n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n    \n}\nmu_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(13.3, 15.7)\n    \n}\n```\n:::\n\n\nYou can plot the density as below if you implement `mu_pdf` to compute the PDF of the posterior $p(\\mu|y)$ of the average hardness $\\mu$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test` \n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.3817557\n    # Use the computed parameters as below to compute the PDF:\n     \n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pdf(windshieldy1, x), type=\"l\", \n    xlab=TeX(r'(average hardness $\\mu$)'), \n    ylab=TeX(r'(PDF of the posterior $p(\\mu|y)$)')\n)\n```\n\n::: {.cell-output-display}\n![PDF of the posterior $p(\\mu|y)$ of the average hardness $\\mu$](simple_template3_files/figure-html/fig-2b-density-1.png){#fig-2b-density width=672}\n:::\n:::\n\n\n\n\n## (c)\n\n\nWrite your answers and code here!\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_pred_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n    \n}\nmu_pred_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(11.8, 17.2)\n    \n}\n```\n:::\n\n\nYou can plot the density as below if you implement `mu_pred_pdf` to compute the PDF of the posterior predictive $p(\\tilde{y}|y)$ of a new hardness observation $\\tilde{y}$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pred_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test` \n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.8536316\n    # Use the computed parameters as below to compute the PDF:\n     \n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_pred_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pred_pdf(windshieldy1, x), type=\"l\", \n    xlab=TeX(r'(new hardness observation $\\tilde{y}$)'), \n    ylab=TeX(r'(PDF of the posterior predictive $p(\\tilde{y}|y)$)')\n)\n```\n\n::: {.cell-output-display}\n![PDF of the posterior predictive $p(\\tilde{y}|y)$ of a new hardness observation $\\tilde{y}$](simple_template3_files/figure-html/fig-2c-density-1.png){#fig-2c-density width=672}\n:::\n:::\n\n\n\n# Inference for the difference between proportions (3 points) \n\n## (a)\n\n\nWrite your answers here! \n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\nThe below data is **only for the tests**:\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(4711)\nndraws = 1000\np0 = rbeta(ndraws, 5, 95)\np1 = rbeta(ndraws, 10, 90)\n```\n:::\n\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: mean(), quantile()\n\nposterior_odds_ratio_point_est <- function(p0, p1) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    2.650172\n    \n}\nposterior_odds_ratio_interval <- function(p0, p1, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(0.6796942,7.3015964)\n    \n}\n```\n:::\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers and code here! \n\n\n# Inference for the difference between normal means (3 points) \n\nLoading the library and the data.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy2\")\n# The new data are now stored in the variable `windshieldy2`.\n# The below displays the first few rows of the new data:\nhead(windshieldy2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 15.980 14.206 16.011 17.250 15.993 15.722\n```\n:::\n:::\n\n\n\n\n## (a)\n\n\nWrite your answers here! \n\n\n\n## (b)\n\n\nWrite your answers and code here! \n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum(),\n# rtnew() (from aaltobda), quantile() and hist().\n```\n:::\n\n\n\n\n## (c)\n\n\nWrite your answers here! \n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()    \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✔ | F W S  OK | Context\n\n⠏ |         0 | task-1-subtask-1-tests                                          \n⠏ |         0 | mu_point_est()                                                  \n✖ | 1       3 | mu_point_est()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-1-subtask-1-tests.R:17:3'): mu_point_est()\nmu_point_est(data = 1:10) not equivalent to 5.5.\n1/1 mismatches\n[1] 14.5 - 5.5 == 9\nError: Incorrect result for vector 1:10\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-2-subtask-1-tests                                          \n⠏ |         0 | mu_interval()                                                   \n✖ | 2       3 | mu_interval()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-2-subtask-1-tests.R:15:3'): mu_interval()\nmu_interval(data = 1:10, prob = 0.95) not equivalent to c(3.3, 7.7).\n2/2 mismatches (average diff: 9)\n[1] 13.3 - 3.3 == 10\n[2] 15.7 - 7.7 ==  8\nError: Incorrect result for 1:10 using a 95% interval.\n\nFailure ('test-task-2-subtask-1-tests.R:16:3'): mu_interval()\nmu_interval(data = 1:10, prob = 0.8) not equivalent to c(4.2, 6.8).\n2/2 mismatches (average diff: 9)\n[1] 13.3 - 4.2 == 9.1\n[2] 15.7 - 6.8 == 8.9\nError: Incorrect result for 1:10 using a 80% interval.\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-3-subtask-1-tests                                          \n⠏ |         0 | mu_pred_interval()                                              \n✖ | 2       3 | mu_pred_interval()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-3-subtask-1-tests.R:16:3'): mu_pred_interval()\nmu_pred_interval(1:10, 0.95) not equivalent to c(-1.7, 12.7).\n2/2 mismatches (average diff: 9)\n[1] 11.8 - -1.7 == 13.5\n[2] 17.2 - 12.7 ==  4.5\nError: Incorrect result for 1:10, (95%)\n\nFailure ('test-task-3-subtask-1-tests.R:18:3'): mu_pred_interval()\nmu_pred_interval(1:10, 0.8) not equivalent to c(1.1, 9.9).\n2/2 mismatches (average diff: 9)\n[1] 11.8 - 1.1 == 10.7\n[2] 17.2 - 9.9 ==  7.3\nError: Incorrect result for 1:10, (80%)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-4-subtask-1-tests                                          \n⠏ |         0 | mu_pred_point_est()                                             \n✖ | 1       3 | mu_pred_point_est()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-4-subtask-1-tests.R:16:3'): mu_pred_point_est()\nmu_pred_point_est(data = 1:10) not equivalent to 5.5.\n1/1 mismatches\n[1] 14.5 - 5.5 == 9\nError: Incorrect result for vector 1:10\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-5-subtask-1-tests                                          \n⠏ |         0 | posterior_odds_ratio_point_est()                                \n✖ | 3       3 | posterior_odds_ratio_point_est()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-5-subtask-1-tests.R:18:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p1, p0) not equivalent to 0.5307909.\n1/1 mismatches\n[1] 2.65 - 0.531 == 2.12\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90).\n\nFailure ('test-task-5-subtask-1-tests.R:24:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p0, p1) not equivalent to 1.876519.\n1/1 mismatches\n[1] 2.65 - 1.88 == 0.774\nError: Incorrect result for p0 = rbeta(100000, 5, 5), p1 = rbeta(100000, 5, 6).\n\nFailure ('test-task-5-subtask-1-tests.R:25:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p1, p0) not equivalent to 1.24902.\n1/1 mismatches\n[1] 2.65 - 1.25 == 1.4\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5).\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-6-subtask-1-tests                                          \n⠏ |         0 | posterior_odds_ratio_interval()                                 \n✖ | 6       2 | posterior_odds_ratio_interval()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-6-subtask-1-tests.R:17:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p0, p1, 0.9) not equivalent to c(0.875367, 6.05911).\n2/2 mismatches (average diff: 0.719)\n[1] 0.68 - 0.875 == -0.196\n[2] 7.30 - 6.059 ==  1.242\nError: Incorrect result for p0 = rbeta(100000, 5, 95), p1 = rbeta(100000, 10, 90) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:19:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.9) not equivalent to c(0.1650407, 1.142378).\n2/2 mismatches (average diff: 3.34)\n[1] 0.68 - 0.165 == 0.515\n[2] 7.30 - 1.142 == 6.159\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:21:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.8) not equivalent to c(0.2086461, 0.9392956).\n2/2 mismatches (average diff: 3.42)\n[1] 0.68 - 0.209 == 0.471\n[2] 7.30 - 0.939 == 6.362\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90) and 80%.\n\nFailure ('test-task-6-subtask-1-tests.R:27:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p0, p1, 0.9) not equivalent to c(0.2714472, 5.5970131).\n2/2 mismatches (average diff: 1.06)\n[1] 0.68 - 0.271 == 0.408\n[2] 7.30 - 5.597 == 1.705\nError: Incorrect result for p0 = rbeta(100000, 5, 5), p1 = rbeta(100000, 5, 6) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:29:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.9) not equivalent to c(0.1786667, 3.6839583).\n2/2 mismatches (average diff: 2.06)\n[1] 0.68 - 0.179 == 0.501\n[2] 7.30 - 3.684 == 3.618\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:31:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.8) not equivalent to c(0.252972, 2.633517).\n2/2 mismatches (average diff: 2.55)\n[1] 0.68 - 0.253 == 0.427\n[2] 7.30 - 2.634 == 4.668\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5) and 80%.\n────────────────────────────────────────────────────────────────────────────────\nMaximum number of failures exceeded; quitting at end of file.\nℹ Increase this number with (e.g.) `testthat::set_max_fails(Inf)` \n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 0.5 s\n\n[ FAIL 15 | WARN 0 | SKIP 0 | PASS 17 ]\n══ Terminated early ════════════════════════════════════════════════════════════\n```\n:::\n:::\n\n\n:::\n::::\n\n",
    "supporting": [
      "simple_template3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}