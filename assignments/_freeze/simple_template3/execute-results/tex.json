{
  "hash": "a950bf9f623fda3d62057ae138a93825",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 3\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\neditor: source\n---\n\n\n\n\n\n\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n\nThis is the template for [assignment 3](assignment3.html). You can download the qmd-files ([full](https://avehtari.github.io/BDA_course_Aalto/assignments/template3.qmd), [simple](https://avehtari.github.io/BDA_course_Aalto/assignments/simple_template3.qmd)) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.**\n\nThe following will set-up [`markmyassignment`](https://github.com/MansMeg/markmyassignment) to check your functions at the end of the notebook:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(markmyassignment)){\n    install.packages(\"markmyassignment\")\n    library(markmyassignment)\n}\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment3.yml\", sep=\"\")\nset_assignment(assignment_path)\n```\n:::\n\n\n\n\n\n\nThe following installs and loads the `aaltobda` package:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(aaltobda)){\n    install.packages(\"aaltobda\", repos = c(\"https://avehtari.r-universe.dev\", getOption(\"repos\")))\n    library(aaltobda)\n}\n```\n:::\n\n\n\n\n\nThe following installs and loads the [`latex2exp` package](https://github.com/stefano-meschiari/latex2exp), which allows us to use LaTeX in plots:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(latex2exp)){\n    install.packages(\"latex2exp\")\n    library(latex2exp)\n}\n```\n:::\n\n\n\n\n\n\n:::\n::::\n\n\n\n\n# Inference for normal mean and deviation (3 points)\n\nLoading the library and the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy1\")\n# The data are now stored in the variable `windshieldy1`.\n# The below displays the data:\nwindshieldy1\n```\n:::\n\n\n\n\n\nThe below data is **only for the tests**, you need to change to the\nfull data `windshieldy1` when reporting your results.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwindshieldy_test <- c(13.357, 14.928, 14.896, 14.820)\n```\n:::\n\n\n\n\n\n\n\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n\n}\nmu_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(13.3, 15.7)\n\n}\n```\n:::\n\n\n\n\n\n\nYou can plot the density as below if you implement `mu_pdf` to compute the PDF of the posterior $p(\\mu|y)$ of the average hardness $\\mu$.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test`\n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.3817557\n    # Use the computed parameters as below to compute the PDF:\n\n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pdf(windshieldy1, x), type=\"l\",\n    xlab=TeX(r'(average hardness $\\mu$)'),\n    ylab=TeX(r'(PDF of the posterior $p(\\mu|y)$)')\n)\n```\n:::\n\n\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers and code here!\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_pred_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n\n}\nmu_pred_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(11.8, 17.2)\n\n}\n```\n:::\n\n\n\n\n\n\nYou can plot the density as below if you implement `mu_pred_pdf` to compute the PDF of the posterior predictive $p(\\tilde{y}|y)$ of a new hardness observation $\\tilde{y}$.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pred_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test`\n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.8536316\n    # Use the computed parameters as below to compute the PDF:\n\n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_pred_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pred_pdf(windshieldy1, x), type=\"l\",\n    xlab=TeX(r'(new hardness observation $\\tilde{y}$)'),\n    ylab=TeX(r'(PDF of the posterior predictive $p(\\tilde{y}|y)$)')\n)\n```\n:::\n\n\n\n\n\n\n\n# Inference for the difference between proportions (3 points)\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\nThe below data is **only for the tests**:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(4711)\nndraws = 1000\np0 = rbeta(ndraws, 5, 95)\np1 = rbeta(ndraws, 10, 90)\n```\n:::\n\n\n\n\n\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: mean(), quantile()\n\nposterior_odds_ratio_point_est <- function(p0, p1) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    2.650172\n\n}\nposterior_odds_ratio_interval <- function(p0, p1, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(0.6796942,7.3015964)\n\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers and code here!\n\n\n# Inference for the difference between normal means (3 points)\n\nLoading the library and the data.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy2\")\n# The new data are now stored in the variable `windshieldy2`.\n# The below displays the first few rows of the new data:\nhead(windshieldy2)\n```\n:::\n\n\n\n\n\n\n\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum(),\n# rtnew() (from aaltobda), quantile() and hist().\n```\n:::\n\n\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers here!\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()\n```\n:::\n\n\n\n\n\n\n:::\n::::\n",
    "supporting": [
      "simple_template3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}