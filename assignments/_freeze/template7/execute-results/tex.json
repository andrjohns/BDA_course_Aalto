{
  "hash": "63830e66a17d16ce314266218f80fa74",
  "result": {
    "markdown": "---\ntitle: \"Assignment 7\"\nsubtitle: \"Hierarchical model in Stan\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    standalone: true\n    self-contained: true\n    embed-resources: true\n    number-sections: true\n    mainfont: Georgia, serif\n    # linkcolor: \"#212529\"\n    fontsize: 1.2em\n    page-layout: article\n  pdf:\n    # documentclass: article\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\nreference-location: margin\ncitation-location: margin\ncomments:\n  hypothesis: true\neditor: source\n---\n\n\n\n\n# General information\n\nThis is the template for [assignment 7](assignment7.html). You can download the [separate model with bad priors](https://raw.githubusercontent.com/avehtari/BDA_course_Aalto/gh-pages/assignments/additional_files/assignment7/chickens_separate.stan) and the [qmd-file](https://raw.githubusercontent.com/avehtari/BDA_course_Aalto/gh-pages/assignments/template7.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.** \n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\nThe following loads several needed packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aaltobda)\nlibrary(bayesplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is bayesplot version 1.10.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- Online documentation and vignettes at mc-stan.org/bayesplot\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- bayesplot theme set to bayesplot::theme_default()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n   * Does _not_ affect other ggplot2 plots\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n   * See ?bayesplot_theme_set for details on theme setting\n```\n:::\n\n```{.r .cell-code}\nlibrary(cmdstanr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is cmdstanr version 0.5.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStan path: /root/.cmdstan/cmdstan-2.31.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStan version: 2.31.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nA newer version of CmdStan is available. See ?install_cmdstan() to install it.\nTo disable this check set option or environment variable CMDSTANR_NO_VER_CHECK=TRUE.\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggdist) # for stat_dotsinterval\nlibrary(posterior)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is posterior version 1.4.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'posterior'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:bayesplot':\n\n    rhat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:aaltobda':\n\n    mcse_quantile\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    mad, sd, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    %in%, match\n```\n:::\n\n```{.r .cell-code}\nif(!require(brms)){\n    install.packages(\"brms\")\n    library(brms)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: brms\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Rcpp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading 'brms' package (version 2.19.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'brms'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggdist':\n\n    dstudent_t, pstudent_t, qstudent_t, rstudent_t\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:bayesplot':\n\n    rhat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    ar\n```\n:::\n\n```{.r .cell-code}\n# Set more readable themes with bigger font for plotting packages.\nggplot2::theme_set(theme_minimal(base_size = 14))\nbayesplot::bayesplot_theme_set(theme_minimal(base_size = 14))\n\n# This registers CmdStan as the backend for compiling cmdstan-chunks.\ncheck_cmdstan_toolchain(fix = TRUE, quiet = TRUE)\nregister_knitr_engine(override = FALSE)\n```\n:::\n\n\n\n:::\n::::\n\n\n# Hierarchical Model: Chicken Data with Stan (6p)\n\n\n## Choosing a weakly informative prior by intuition\n### (a)\n\n### (b)\n\n### (c)\n\n### (d)\n\n### (e)\n\n## Choosing a weakly informative prior using external references\n### (f)\n\n### (g)\n\n### (h)\n\n### (i)\n\n## Non-normal priors\n### (j)\n\n## Modeling diet effects on chicken weight\n::::{.callout-important collapse=true}\n# Data inside, don't peek before you have set your priors!\n:::{.callout-important collapse=true}\n# Have you set your priors?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"ChickWeight\")\n\nChick12 <- ChickWeight |> filter(Time == 12)\n\nhead(Chick12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGrouped Data: weight ~ Time | Chick\n  weight Time Chick Diet\n1    106   12     1    1\n2    122   12     2    1\n3    115   12     3    1\n4    102   12     4    1\n5    141   12     5    1\n6    141   12     6    1\n```\n:::\n:::\n\n\n:::\n::::\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Model fitting\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nTo run Stan for that model, simply use:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstan_data <- list(\n  N_observations = nrow(Chick12),\n  N_diets = length(unique(Chick12$Diet)),\n  diet_idx = Chick12$Diet,\n  weight = Chick12$weight\n)\n\nmodel_separate <- cmdstan_model(stan_file = \"additional_files/assignment7/chickens_separate.stan\")\n\n# Sampling from the model happens here:\nfit_separate <- model_separate$sample(data = stan_data, refresh=0,\n                                      show_messages=FALSE,\n                                      show_exceptions=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: No chains finished successfully. Unable to retrieve the fit.\n```\n:::\n:::\n\n\nFit objects by default print a summary of the draws obtained.\nThese are **NOT** the results you would expect to turn in your report. You will need to change the priors in the code for the separate model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_separate\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: Fitting failed. Unable to print.\n```\n:::\n:::\n\n\nQuick model convergence check (as in assignment 6):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_separate$cmdstan_diagnose()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No CmdStan runs finished successfully. Unable to run bin/diagnose.\n```\n:::\n:::\n\n\n\n:::\n::::\n\n\n### (k)\n\n### (l)\n\n\n**For the figures below, we use the earlier draws for the separate model with bad priors.\nWhen you have implemented the pooled and hierarchical models, edit the code below to\ninclude draws from your model posterior into the figures.**\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n### Model fitting and data preparation\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Sampling the pooled & hierarhical models\"}\nfit_pooled <- fit_separate\nfit_hierarchical <- fit_separate\n```\n:::\n\n\n\nBelow, we collect the corresponding posterior draws from the three models into a shared\ndata frame using the `extract_variable` function. This makes plotting the posterior\nin a single plot easier.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\n# Expect the same number of posterior draws from each model.\nndraws <- nrow(fit_hierarchical$sampler_diagnostics(format = \"matrix\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the sampler diagnostics.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\n# Collect posterior draws and the model used to a data frame.\nmean_diet_4_separate = extract_variable(fit_separate, \"mean_diet[4]\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\nmean_diet_4_pooled = extract_variable(fit_pooled, \"mean_diet[4]\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\nmean_diet_4_hierarchical = extract_variable(fit_hierarchical, \"mean_diet[4]\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\nposterior_mean_diet_4 <- data.frame(\n  model_name = rep(c(\"Separate\", \"Pooled\", \"Hierarchical\"),\n              each = ndraws),\n  mean_diet_4 = c(\n   mean_diet_4_separate, mean_diet_4_pooled, mean_diet_4_hierarchical\n  ))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in data.frame(model_name = rep(c(\"Separate\", \"Pooled\", \"Hierarchical\"), : object 'mean_diet_4_separate' not found\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\npredicted_weight_diet_4 <- data.frame(\n  model_name = rep(c(\"Separate\", \"Pooled\", \"Hierarchical\"),\n              each = ndraws),\n  predicted_weight = c(\n   extract_variable(fit_separate, \"weight_pred\"),\n   extract_variable(fit_pooled, \"weight_pred\"),\n   extract_variable(fit_hierarchical, \"weight_pred\")\n  ))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\n# Collect posterior draws and the model used to a long data frame.\nposterior_mean_diet_5 <- data.frame(\n  model_name = rep(c(\"Separate\", \"Pooled\", \"Hierarchical\"),\n    each = ndraws\n  ),\n  mean_diet_5 = c(\n    extract_variable(fit_separate, \"mean_five\"),\n    extract_variable(fit_pooled, \"mean_five\"),\n    extract_variable(fit_hierarchical, \"mean_five\")\n  )\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n\n```{.r .cell-code  code-summary=\"Prepare data for plots\"}\n# Mean observed weight per diet, these help to compare the posteriors to data.\ndiet_means <- sapply(\n  1:4, function(diet) mean(Chick12[Chick12$Diet == diet, \"weight\"])\n)\n```\n:::\n\n\n\n:::\n::::\n\n\n### (m)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(posterior_mean_diet_4, aes(x = mean_diet_4, y = model_name)) +\n  stat_dotsinterval(quantiles = 100, scale = .9) +\n  vline_at(diet_means[4], size = 1, linetype = \"dashed\") +\n  # Annotate the vline from above.\n  annotate(\"text\", label = \"Observation mean\", x = diet_means[4] - 5, y = .7,\n           hjust = \"right\", size = 6) +\n  # Add title and axis labels. One line to make everything so much more clear!\n  labs(\n    title = \"Mean of diet 4\",\n    x = \"Weight (g)\",\n    y = \"Model\"\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(posterior_mean_diet_4, aes(x = mean_diet_4, y = model_name)): object 'posterior_mean_diet_4' not found\n```\n:::\n:::\n\n\n\n\n### (n)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(predicted_weight_diet_4, aes(x = predicted_weight, y = model_name)) +\n  stat_dotsinterval(quantiles = 100, scale = .9) +\n  vline_at(diet_means[4], size = 1, linetype = \"dashed\") +\n  # Annotate the vline from above.\n  annotate(\"text\", label = \"Observation mean\", x = diet_means[4] - 5, y = .7,\n           hjust = \"right\", size = 6) +\n  # Add title and axis labels. One line to make everything so much more clear!\n  labs(\n    title = \"Weigth of a chick with diet 4\",\n    x = \"Weight (g)\",\n    y = \"Model\"\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(predicted_weight_diet_4, aes(x = predicted_weight, y = model_name)): object 'predicted_weight_diet_4' not found\n```\n:::\n:::\n\n\n\n\n### (o)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(posterior_mean_diet_5, aes(x = mean_diet_5, y = model_name)) +\n  # Draw the mean of each diet from the data as a dashed vertical line.\n  vline_at(diet_means, size = .5, linetype = \"dashed\") +\n  # dotsinterval gives mean, 50%, and 90% intervals + dotsplot with each dot\n  # representing 1% of data (quantiles = 100).\n  stat_dotsinterval(quantiles = 100, scale = .9) +\n  # Annotate the vline from above.\n  annotate(geom = \"text\", label = \"Means of observed diets\", y = .7, x = 100,\n           hjust = \"right\", size = 5, family = \"sans\") +\n  # Add title and axis labels. One line to make everything so much more clear!\n  labs(title = \"Mean of a new diet\",\n       x = \"Weight (g)\",\n       y = \"Model\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(posterior_mean_diet_5, aes(x = mean_diet_5, y = model_name)): object 'posterior_mean_diet_5' not found\n```\n:::\n:::\n\n\n\n\n### (p)\n\n# Hierarchical model with BRMS (3p)\n### (a)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbayesplot::mcmc_scatter(x = fit_hierarchical$draws(variables = c(\"mean_diet[4]\", \"sd_diets\")),\n                        np = nuts_params(fit_hierarchical)) +\n  scale_y_log10() +\n  labs(x = expression(mean_diet[4]), y = expression(sd_diets)) +\n  ylim(c(0,NA))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: No chains finished successfully. Unable to retrieve the draws.\n```\n:::\n:::\n\n\n\n\n### (b)\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n### Fit brms model\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrms_fit = brm(\n  weight ~ 1 + (1 | Diet),\n  data=Chick12,\n  prior=c(\n    # REPLACE WITH YOUR PRIOR FOR THE INTERCEPT\n    prior(normal(0,1), class=\"Intercept\"), # prior for mu_0\n    # REPLACE WITH YOUR PRIOR FOR SIGMA\n    prior(normal(0,1), class=\"sigma\"),     # prior for sigma\n    # REPLACE WITH YOUR PRIOR FOR SD\n    prior(normal(0,1), class=\"sd\")         # prior for tau\n  ),\n  backend = \"cmdstanr\",\n  save_pars = save_pars(manual = c(\"z_1[1,4]\"))\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nStart sampling\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 1 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 3 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Informational Message: The current Metropolis proposal is about to be rejected because of the following issue:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 Exception: normal_lpdf: Location parameter[1] is inf, but must be finite! (in '/tmp/RtmpJvk4bD/model-3514df77fc7.stan', line 43, column 4 to column 41)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 If this warning occurs sporadically, such as for highly constrained variable types like covariance matrices, then the sampler is fine,\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 but if this warning occurs often then your model may be either severely ill-conditioned or misspecified.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nChain 4 \n```\n:::\n:::\n\n\n\n:::\n::::\n\n\n\nBecause `brms` is a bit chatty, suppress its output in the PDF using the block above, but copy the code you executed into the code block below, which doesn't execute:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Copy the you used to fit the brms model here\n```\n:::\n\n\n\n\n### (c)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Draws for mu_4\nmu_4 = posterior_epred(brms_fit, newdata = data.frame(Diet=4))\n\n# Compute the mean, and quantiles. Remember to round your answers accordingly.\n# ...\n```\n:::\n\n\n\n\n### (d)\n\n\n### Scatterplot for non-centered parametrization\n\nDue the non-centered parametrization, we need to transform compute the $\\mu_d$ term as the sum of the population intercept and the group specific deviation from the intercept. You can choose which diet to plot by modifying the `d` integer in `r_Diet[d,Intercept]`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraws = as_draws_df(brms_fit) |>\n  posterior::mutate_variables(mean_diet_4 = `r_Diet[4,Intercept]` + b_Intercept)\n\nbayesplot::mcmc_scatter(draws,\n                        pars = c(\"mean_diet_4\", \"sd_Diet__Intercept\"),\n                        np = nuts_params(brms_fit)) +\n  scale_y_log10() +\n  xlab(expression(mean_diet[4])) +\n  ylab(expression(sd_diets))\n```\n\n::: {.cell-output-display}\n![](template7_files/figure-pdf/plot scatter non-centered parameterization-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n### (e)\n",
    "supporting": [
      "template7_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}