{
  "hash": "01a32670e8b678e33a6fcaf7d43a1d38",
  "result": {
    "markdown": "---\ntitle: \"Assignment 8\"\nsubtitle: \"LOO-CV model comparison\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:  \n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\neditor: source\n---\n\n\n\n\n# General information\n\nThis is the template for [assignment 8](assignment8.html). You can download the [qmd-file](https://avehtari.github.io/BDA_course_Aalto/assignments/template8.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.** \n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n \n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nThe following loads several needed packages:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bayesplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is bayesplot version 1.10.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- Online documentation and vignettes at mc-stan.org/bayesplot\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- bayesplot theme set to bayesplot::theme_default()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n   * Does _not_ affect other ggplot2 plots\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n   * See ?bayesplot_theme_set for details on theme setting\n```\n:::\n\n```{.r .cell-code}\nlibrary(cmdstanr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is cmdstanr version 0.5.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStan path: /root/.cmdstan/cmdstan-2.31.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n- CmdStan version: 2.31.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nA newer version of CmdStan is available. See ?install_cmdstan() to install it.\nTo disable this check set option or environment variable CMDSTANR_NO_VER_CHECK=TRUE.\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(ggdist) # for stat_dotsinterval\nlibrary(posterior)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is posterior version 1.4.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'posterior'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:bayesplot':\n\n    rhat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    mad, sd, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    %in%, match\n```\n:::\n\n```{.r .cell-code}\nlibrary(brms)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Rcpp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading 'brms' package (version 2.19.0). Useful instructions\ncan be found by typing help('brms'). A more detailed introduction\nto the package is available through vignette('brms_overview').\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'brms'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggdist':\n\n    dstudent_t, pstudent_t, qstudent_t, rstudent_t\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:bayesplot':\n\n    rhat\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    ar\n```\n:::\n\n```{.r .cell-code}\n# Globally specfiy cmdstan backend for brms\noptions(brms.backend=\"cmdstanr\")\n# Tell brms to cache results if possible\noptions(brms.file_refit=\"on_change\")\n\n# Set more readable themes with bigger font for plotting packages\nggplot2::theme_set(theme_minimal(base_size = 14))\nbayesplot::bayesplot_theme_set(theme_minimal(base_size = 14))\n```\n:::\n\n\n\n:::\n::::\n\n\n# A hierarchical model for chicken weight time series\n\n\n## Exploratory data analysis\n\n## (a)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: ggplot, aes(x=...), geom_histogram\n```\n:::\n\n\n\n\n\n## (b)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: ggplot, aes(x=...,y=...,group=...,color=...), geom_line\n```\n:::\n\n\n\n\n## Linear regression\n\n## (c)\n\n\nIn `brms`, a regression can be specified as below, see also [below (#m)](#m) or [the last template](template7.html#b-1). Fill in the appropriate variables,\ndata, and likelihood family. Specify the priors, then run the model (by removing `#| eval: false` below).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npriors <- c(\n  prior(normal(0, <value>), coef = \"Time\"),\n  prior(normal(0, <value>), coef = \"Diet2\"),\n  prior(normal(0, <value>), coef = \"Diet3\"),\n  prior(normal(0, <value>), coef = \"Diet4\")\n)\n\nf1 <- brms::brm(\n  # This specifies the formula\n  <OUTCOME> ~ 1 + <PREDICTOR> + <PREDICTOR>,\n  # This specifies the dataset\n  data = <data>,\n  # This specifies the observation model family\n  family = <observation_family>,\n  # This passes the priors specified above to brms\n  prior = priors,\n  # This causes brms to cache the results\n  file = \"additional_files/assignment8/f1\"\n)\n```\n:::\n\n\n\n\n\n## (d)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: brms::pp_check\n```\n:::\n\n\n\n\n\n## (e)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: brms::pp_check(..., type = ..., group=...)\n```\n:::\n\n\n\n\n## Log-normal linear regression\n\n## (f)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlog_priors <- c(\n  prior(normal(0, log(3)), coef = \"Time\"),\n  prior(normal(0, log(5)), coef = \"Diet2\"),\n  prior(normal(0, log(5)), coef = \"Diet3\"),\n  prior(normal(0, log(5)), coef = \"Diet4\")\n)\n```\n:::\n\n\n\n\n## Hierarchical log-normal linear regression\n\n## (g)\n\n\n## (h)\n\n## Model comparison using the ELPD\n\n## (i)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: loo, loo_compare\n```\n:::\n\n\n\n\n\n## (j)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: plot(loo(...), label_points = TRUE)\n```\n:::\n\n\n\n\n\n## (k)\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Creating a dummy example plot \n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nCreating a dummy fit just to be able to generate an example plot below. \nGenerate a similar plot for your hierarchical model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The brms-formula (weights ~ ...) below is not one that you should be using in your models!\ndummy_fit <- brms::brm(\n  weight ~ 1 + Time + Chick,\n  data = ChickWeight,\n  file=\"additional_files/assignment8/dummy_fit\"\n)\n# Adjust the chicken_idxs variable to select appropriate chickens\nchicken_idxs = c(1,3,11,43)\n# Create this plot for your hierarchical model for selected chickens\nbrms::pp_check(\n  dummy_fit, type = \"intervals_grouped\", group = \"Chick\", \n  newdata=ChickWeight |> filter(Chick %in% chicken_idxs)\n)\n```\n:::\n\n\n\n:::\n::::\n\n\n## Model comparison using the RMSE\n\n## (l)\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## `rmse` function implementation\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nThe below function takes a brms fit object and computes either the [root-mean-square error (RMSE)](https://en.wikipedia.org/wiki/Root-mean-square_deviation) or the PSIS-LOO-RMSE, i.e. the RMSE using LOO-CV estimated using PSIS-LOO.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute RMSE or LOO-RMSE\nrmse <- function(fit, use_loo=FALSE){\n  mean_y_pred <- if(use_loo){\n    brms::loo_predict(fit)\n  }else{\n    colMeans(brms::posterior_predict(fit)) \n  }\n  sqrt(mean(\n    (mean_y_pred - brms::get_y(fit))^2\n  ))\n}\n```\n:::\n\n\n\n:::\n::::\n\n",
    "supporting": [
      "template8_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}