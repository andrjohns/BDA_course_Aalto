{
  "hash": "1d0a305030efa2f2822b966f167fc4b4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 5\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\neditor: source\n---\n\n\n\n\n\n\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n\nThis is the template for [assignment 5](assignment5.html). You can download the [qmd-file](https://avehtari.github.io/BDA_course_Aalto/assignments/template5.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.**\n\nThe following will set-up [`markmyassignment`](https://github.com/MansMeg/markmyassignment) to check your functions at the end of the notebook:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(markmyassignment)){\n    install.packages(\"markmyassignment\")\n    library(markmyassignment)\n}\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment5.yml\", sep=\"\")\nset_assignment(assignment_path)\n```\n:::\n\n\n\n\n\n\nThe following installs and loads the `aaltobda` package:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(aaltobda)){\n    install.packages(\"aaltobda\", repos = c(\"https://avehtari.r-universe.dev\", getOption(\"repos\")))\n    library(aaltobda)\n}\n```\n:::\n\n\n\n\n\nThe following installs and loads the [`latex2exp` package](https://github.com/stefano-meschiari/latex2exp), which allows us to use LaTeX in plots:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(latex2exp)){\n    install.packages(\"latex2exp\")\n    library(latex2exp)\n}\n```\n:::\n\n\n\n\n\nThe following installs and loads the [`posterior` package](https://github.com/stan-dev/posterior) which imports the `rhat_basic()` function:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(posterior)){\n    install.packages(\"posterior\")\n    library(posterior)\n}\n```\n:::\n\n\n\n\n\nThe following installs and loads the [`ggplot2` package](https://ggplot2.tidyverse.org/) and the [`bayesplot` package](https://mc-stan.org/bayesplot/index.html)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(ggplot2)){\n    install.packages(\"ggplot2\")\n    library(ggplot2)\n}\nif(!require(bayesplot)){\n    install.packages(\"bayesplot\")\n    library(bayesplot)\n}\n```\n:::\n\n\n\n\n\n\n:::\n::::\n\n\n# Generalized linear model: Bioassay model with Metropolis algorithm\n\n## (a)\n\n\nWrite your answers/code here!\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: runif, rnorm\n# bioassaylp, dmvnorm (from aaltobda)\n\ndata(\"bioassay\")\n# Start by implementing a function called `density_ratio` to\n# compute the density ratio function, $r$ in Eq. (11.1) in BDA3:\ndensity_ratio <- function(alpha_propose, alpha_previous, beta_propose, beta_previous, x, y, n){\n    # Do computation here, and return as below.\n    # Below are the correct return values for two different calls of this function:\n\n    # alpha_propose = 1.89, alpha_previous = 0.374,\n    # beta_propose = 24.76, beta_previous = 20.04,\n    # x = bioassay$x, y = bioassay$y, n = bioassay$n\n    1.305179\n\n    # alpha_propose = 0.374, alpha_previous = 1.89,\n    # beta_propose = 20.04, beta_previous = 24.76,\n    # x = bioassay$x, y = bioassay$y, n = bioassay$n\n    0.7661784\n\n}\n# Then implement a function called `metropolis_bioassay()` which\n# implements the Metropolis algorithm using the `density_ratio()`:\nmetropolis_bioassay <- function(alpha_initial, beta_initial, alpha_sigma, beta_sigma, no_draws, x, y, n){\n    # Do computation here, and return as below.\n    # Below are \"wrong\" values (unlikely to actually occur)\n    # in the \"correct\" format (such that they work with the plotting functions further down).\n    data.frame(\n        alpha=c(alpha_initial, alpha_initial+alpha_sigma, alpha_initial-alpha_sigma),\n        beta=c(beta_initial, beta_initial+beta_sigma, beta_initial-beta_sigma)\n    )\n\n}\ndf = metropolis_bioassay(0, 0, 1, 1, 1000, bioassay$x, bioassay$y, bioassay$n)\n```\n:::\n\n\n\n\n\n\n\n\n## (b)\n\n\nWrite your answers/code here!\n\nHave a look at [`bayesplot` trace plot examples](http://mc-stan.org/bayesplot/reference/MCMC-traces.html#examples) and tune your plot if wanted/needed. Don't forget to include a title/caption/description.\n\n**The below example plot only includes a single chain, but your report should include a plot with multiple chains overlayed!**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mcmc_trace (from bayesplot)\nmcmc_trace(df, pars=c(\"alpha\", \"beta\"))\n```\n:::\n\n\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers/code here!\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: rhat_basic (from posterior)\n```\n:::\n\n\n\n\n\n\n\n\n## (c)\n\n\nWrite your answers/code here!\n\nHave a look at [`bayesplot` scatter plot examples](https://mc-stan.org/bayesplot/reference/MCMC-scatterplots.html#examples) and tune your plot if wanted/needed. Don't forget to include a title/caption/description.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mcmc_scatter (from bayesplot)\nmcmc_scatter(df, pars=c(\"alpha\", \"beta\"))\n```\n:::\n\n\n\n\n\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()\n```\n:::\n\n\n\n\n\n\n:::\n::::\n",
    "supporting": [
      "template5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}