{
  "hash": "bdbdb6131717ff0ff6e430a21e4e98aa",
  "result": {
    "markdown": "---\ntitle: \"Assignment 3\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\neditor: source\n---\n\n\n\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n\nThis is the template for [assignment 3](assignment3.html). You can download the qmd-files ([full](https://avehtari.github.io/BDA_course_Aalto/assignments/template3.qmd), [simple](https://avehtari.github.io/BDA_course_Aalto/assignments/simple_template3.qmd)) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.**\n\nThe following will set-up [`markmyassignment`](https://github.com/MansMeg/markmyassignment) to check your functions at the end of the notebook:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(markmyassignment)){\n    install.packages(\"markmyassignment\")\n    library(markmyassignment)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: markmyassignment\n```\n:::\n\n```{.r .cell-code}\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment3.yml\", sep=\"\")\nset_assignment(assignment_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAssignment set:\nassignment3: Bayesian Data Analysis: Assignment 3\nThe assignment contain the following (6) tasks:\n- mu_point_est\n- mu_interval\n- mu_pred_interval\n- mu_pred_point_est\n- posterior_odds_ratio_point_est\n- posterior_odds_ratio_interval\n```\n:::\n:::\n\n\n\nThe following installs and loads the `aaltobda` package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(aaltobda)){\n    install.packages(\"aaltobda\", repos = c(\"https://avehtari.github.io/BDA_course_Aalto/\", getOption(\"repos\")))\n    library(aaltobda)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: aaltobda\n```\n:::\n:::\n\n\nThe following installs and loads the [`latex2exp` package](https://github.com/stefano-meschiari/latex2exp), which allows us to use LaTeX in plots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(latex2exp)){\n    install.packages(\"latex2exp\")\n    library(latex2exp)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: latex2exp\n```\n:::\n:::\n\n\n\n:::\n::::\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-tip collapse=false}\n\n## Showcase: Setting up advanced packages (`posterior` and `ggdist`)\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n*This block showcases advanced tools, which you will be allowed and expected to use after this assignment.*\n**For now, you should solve the assignment without the tools showcased herein.**\n\n\n\n\nThe following installs and loads the [`posterior` package](https://mc-stan.org/posterior/index.html),\nwhich allows us to use its [`rvar` Random Variable Datatype\n](https://mc-stan.org/posterior/articles/rvar.html):\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(posterior)){\n    install.packages(\"posterior\")\n    library(posterior)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: posterior\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is posterior version 1.4.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'posterior'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:aaltobda':\n\n    mcse_quantile\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    mad, sd, var\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    %in%, match\n```\n:::\n:::\n\n\n\nThe following installs and loads the [`ggdist` package](https://mjskay.github.io/ggdist/)\nfor advanced plotting functions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(ggplot2)){\n    install.packages(\"ggplot2\")\n    library(ggplot2)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n```{.r .cell-code}\nggplot2::theme_set(theme_minimal(base_size = 14))\nif(!require(ggdist)){\n    install.packages(\"ggdist\")\n    library(ggdist)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggdist\n```\n:::\n:::\n\n\n\n\n\n*This block showcases advanced tools, which you will be allowed and expected to use after this assignment.*\n**For now, you should solve the assignment without the tools showcased herein.**\n\n\n\n:::\n::::\n\n\n# Inference for normal mean and deviation (3 points)\n\nLoading the library and the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy1\")\n# The data are now stored in the variable `windshieldy1`.\n# The below displays the data:\nwindshieldy1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13.357 14.928 14.896 15.297 14.820 12.067 14.824 13.865 17.447\n```\n:::\n:::\n\n\nThe below data is **only for the tests**, you need to change to the\nfull data `windshieldy1` when reporting your results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwindshieldy_test <- c(13.357, 14.928, 14.896, 14.820)\n```\n:::\n\n\n\n\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n\n}\nmu_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(13.3, 15.7)\n\n}\n```\n:::\n\n\n\nYou can plot the density as below if you implement `mu_pdf` to compute the PDF of the posterior $p(\\mu|y)$ of the average hardness $\\mu$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test`\n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.3817557\n    # Use the computed parameters as below to compute the PDF:\n\n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pdf(windshieldy1, x), type=\"l\",\n    xlab=TeX(r'(average hardness $\\mu$)'),\n    ylab=TeX(r'(PDF of the posterior $p(\\mu|y)$)')\n)\n```\n\n::: {.cell-output-display}\n![PDF of the posterior $p(\\mu|y)$ of the average hardness $\\mu$](template3_files/figure-pdf/fig-2b-density-1.pdf){#fig-2b-density fig-pos='H'}\n:::\n:::\n\n\n\n\n\n## (c)\n\n\nWrite your answers and code here!\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum()\n# and qtnew(), dtnew() (from aaltobda)\n\nmu_pred_point_est <- function(data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    14.5\n\n}\nmu_pred_interval <- function(data, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(11.8, 17.2)\n\n}\n```\n:::\n\n\n\nYou can plot the density as below if you implement `mu_pred_pdf` to compute the PDF of the posterior predictive $p(\\tilde{y}|y)$ of a new hardness observation $\\tilde{y}$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu_pred_pdf <- function(data, x){\n    # Compute necessary parameters here.\n    # These are the correct parameters for `windshieldy_test`\n    # with the provided uninformative prior.\n    df = 3\n    location = 14.5\n    scale = 0.8536316\n    # Use the computed parameters as below to compute the PDF:\n\n    dtnew(x, df, location, scale)\n}\n\nx_interval = mu_pred_interval(windshieldy1, .999)\nlower_x = x_interval[1]\nupper_x = x_interval[2]\nx = seq(lower_x, upper_x, length.out=1000)\nplot(\n    x, mu_pred_pdf(windshieldy1, x), type=\"l\",\n    xlab=TeX(r'(new hardness observation $\\tilde{y}$)'),\n    ylab=TeX(r'(PDF of the posterior predictive $p(\\tilde{y}|y)$)')\n)\n```\n\n::: {.cell-output-display}\n![PDF of the posterior predictive $p(\\tilde{y}|y)$ of a new hardness observation $\\tilde{y}$](template3_files/figure-pdf/fig-2c-density-1.pdf){#fig-2c-density fig-pos='H'}\n:::\n:::\n\n\n\n\n# Inference for the difference between proportions (3 points)\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\nThe below data is **only for the tests**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(4711)\nndraws = 1000\np0 = rbeta(ndraws, 5, 95)\np1 = rbeta(ndraws, 10, 90)\n```\n:::\n\n\n\n**Keep the below name and format for the functions to work with `markmyassignment`:**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: mean(), quantile()\n\nposterior_odds_ratio_point_est <- function(p0, p1) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    2.650172\n\n}\nposterior_odds_ratio_interval <- function(p0, p1, prob = 0.95) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(0.6796942,7.3015964)\n\n}\n```\n:::\n\n\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-tip collapse=false}\n\n## Showcase: advanced tools (`posterior`'s `rvar`, `ggdist`'s `stat_dotsinterval`)\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n*This block showcases advanced tools, which you will be allowed and expected to use after this assignment.*\n**For now, you should solve the assignment without the tools showcased herein.**\n\n\n\n\nThe `posterior` package's random variable datatype `rvar` is a\n[\"sample-based representation of random variables\"](https://mc-stan.org/posterior/articles/rvar.html#:~:text=sample%2Dbased%20representation%20of%20random%20variables)\nwhich makes handling of random samples (of draws) such as the ones contained in the above variables `p0` and `p1` easier.\n[By default, it prints as the mean and standard deviation of the draws](https://mc-stan.org/posterior/articles/rvar.html#:~:text=The%20default%20display%20of%20an%20rvar%20shows%20the%20mean%20and%20standard%20deviation%20of%20each%20element%20of%20the%20array.), **such that `rvar(p0)` prints as 0.05 ± 0.021 and `rvar(p1)` prints as 0.1 ± 0.029**.\n\nThe datatype is [\"designed to [...] be able to be used inside `data.frame()`s and `tibble()`s, and to be used with distribution visualizations in the ggdist package.\"](https://mc-stan.org/posterior/articles/rvar.html#:~:text=designed%20to%20interoperate%20with%20vectorized%20distributions%20in%20the%20distributional%20package%2C%20to%20be%20able%20to%20be%20used%20inside%20data.frame()s%20and%20tibble()s%2C%20and%20to%20be%20used%20with%20distribution%20visualizations%20in%20the%20ggdist%20package.)\nThe code below sets up an [R `data.frame()`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/data.frame) with the draws in `p0` and `p1` wrapped in an `rvar`, and uses that data frame to visualize the draws using [`ggdist`](https://mjskay.github.io/ggdist/index.html), an R package building on [`ggplot2`](https://ggplot2.tidyverse.org/) and [\"designed for both frequentist and Bayesian uncertainty visualization\"](https://mjskay.github.io/ggdist/index.html#:~:text=designed%20for%20both%20frequentist%20and%20Bayesian%20uncertainty%20visualization).\n\nThe below plot, @fig-showcase-probabilities uses `ggdist`'s [`stat_dotsinterval()`](https://mjskay.github.io/ggdist/articles/dotsinterval.html), which by default visualizes\n\n* [an `rvar`'s median and central 66% and 95% intervals](https://mjskay.github.io/ggdist/reference/stat_dotsinterval.html#:~:text=point_interval%20%3D%20%22median_qi%22%2C%0A%20%20.width%20%3D%20c(0.66%2C%200.95)%2C) using a black dot and lines of varying thicknesses as when using `ggdist`'s [`stat_pointinterval()`](https://mjskay.github.io/ggdist/reference/stat_pointinterval.html#examples) and\n* an `rvar`'s draws using grey dots as when using `ggdist`'s [`stat_dots()`](https://mjskay.github.io/ggdist/reference/stat_dots.html#examples):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr0 = rvar(p0)\nr1 = rvar(p1)\nggplot(data.frame(\n    rv_name=c(\"control\", \"treatment\"), rv=c(r0, r1)\n)) +\n    aes(xdist=rv, y=rv_name) +\n    labs(x=\"probabilities of death\", y=\"patient group\") +\n    stat_dotsinterval()\n```\n\n::: {.cell-output-display}\n![Probabilities of death for the two patient groups.](template3_files/figure-pdf/fig-showcase-probabilities-1.pdf){#fig-showcase-probabilities fig-pos='H'}\n:::\n:::\n\n\n\n`rvar`s make it easy to compute functions of random variables, such as\n\n* differences, e.g. $p_0 - p_1$: `r0 - r1` computes an `rvar` which prints as -0.05 ± 0.037, indicating the **sample mean** and the **sample standard deviation** of the difference of the probabilities of death,\n* products, e.g. $p_0 \\, p_1$: `r0 * r1` computes an `rvar` which prints as 0.005 ± 0.0026 which in this case\nhas no great interpretation, or\n* the odds ratios needed in task 3.b).\n\nBelow, in @fig-showcase-odds-ratios, we compute the odds ratios using the `rvar`s and visualize its median, central intervals and draws, as above in @fig-showcase-probabilities:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrodds_ratio = (r1/(1-r1))/(r0/(1-r0))\nggplot(data.frame(\n    rv=c(rodds_ratio)\n)) +\n    aes(xdist=rv) +\n    labs(x=\"odds ratio\", y=\"relative amount of draws\") +\n    stat_dotsinterval()\n```\n\n::: {.cell-output-display}\n![Odds ratios of the two patient groups.](template3_files/figure-pdf/fig-showcase-odds-ratios-1.pdf){#fig-showcase-odds-ratios fig-pos='H'}\n:::\n:::\n\n\n\nYou can use @fig-showcase-odds-ratios to visually check whether the answers you computed for 3.b) make sense.\n\n\n\n*This block showcases advanced tools, which you will be allowed and expected to use after this assignment.*\n**For now, you should solve the assignment without the tools showcased herein.**\n\n\n\n:::\n::::\n\n\n\n## (c)\n\n\nWrite your answers and code here!\n\n\n# Inference for the difference between normal means (3 points)\n\nLoading the library and the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"windshieldy2\")\n# The new data are now stored in the variable `windshieldy2`.\n# The below displays the first few rows of the new data:\nhead(windshieldy2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 15.980 14.206 16.011 17.250 15.993 15.722\n```\n:::\n:::\n\n\n\n\n\n## (a)\n\n\nWrite your answers here!\n\n\n\n## (b)\n\n\nWrite your answers and code here!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: mean(), length(), sqrt(), sum(),\n# rtnew() (from aaltobda), quantile() and hist().\n```\n:::\n\n\n\n\n\n## (c)\n\n\nWrite your answers here!\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nv | F W S  OK | Context\n\n/ |         0 | task-1-subtask-1-tests                                          \n/ |         0 | mu_point_est()                                                  \nx | 1       3 | mu_point_est()\n--------------------------------------------------------------------------------\nFailure ('test-task-1-subtask-1-tests.R:17:3'): mu_point_est()\nmu_point_est(data = 1:10) not equivalent to 5.5.\n1/1 mismatches\n[1] 14.5 - 5.5 == 9\nError: Incorrect result for vector 1:10\n--------------------------------------------------------------------------------\n\n/ |         0 | task-2-subtask-1-tests                                          \n/ |         0 | mu_interval()                                                   \nx | 2       3 | mu_interval()\n--------------------------------------------------------------------------------\nFailure ('test-task-2-subtask-1-tests.R:15:3'): mu_interval()\nmu_interval(data = 1:10, prob = 0.95) not equivalent to c(3.3, 7.7).\n2/2 mismatches (average diff: 9)\n[1] 13.3 - 3.3 == 10\n[2] 15.7 - 7.7 ==  8\nError: Incorrect result for 1:10 using a 95% interval.\n\nFailure ('test-task-2-subtask-1-tests.R:16:3'): mu_interval()\nmu_interval(data = 1:10, prob = 0.8) not equivalent to c(4.2, 6.8).\n2/2 mismatches (average diff: 9)\n[1] 13.3 - 4.2 == 9.1\n[2] 15.7 - 6.8 == 8.9\nError: Incorrect result for 1:10 using a 80% interval.\n--------------------------------------------------------------------------------\n\n/ |         0 | task-3-subtask-1-tests                                          \n/ |         0 | mu_pred_interval()                                              \nx | 2       3 | mu_pred_interval()\n--------------------------------------------------------------------------------\nFailure ('test-task-3-subtask-1-tests.R:16:3'): mu_pred_interval()\nmu_pred_interval(1:10, 0.95) not equivalent to c(-1.7, 12.7).\n2/2 mismatches (average diff: 9)\n[1] 11.8 - -1.7 == 13.5\n[2] 17.2 - 12.7 ==  4.5\nError: Incorrect result for 1:10, (95%)\n\nFailure ('test-task-3-subtask-1-tests.R:18:3'): mu_pred_interval()\nmu_pred_interval(1:10, 0.8) not equivalent to c(1.1, 9.9).\n2/2 mismatches (average diff: 9)\n[1] 11.8 - 1.1 == 10.7\n[2] 17.2 - 9.9 ==  7.3\nError: Incorrect result for 1:10, (80%)\n--------------------------------------------------------------------------------\n\n/ |         0 | task-4-subtask-1-tests                                          \n/ |         0 | mu_pred_point_est()                                             \nx | 1       3 | mu_pred_point_est()\n--------------------------------------------------------------------------------\nFailure ('test-task-4-subtask-1-tests.R:16:3'): mu_pred_point_est()\nmu_pred_point_est(data = 1:10) not equivalent to 5.5.\n1/1 mismatches\n[1] 14.5 - 5.5 == 9\nError: Incorrect result for vector 1:10\n--------------------------------------------------------------------------------\n\n/ |         0 | task-5-subtask-1-tests                                          \n/ |         0 | posterior_odds_ratio_point_est()                                \nx | 3       3 | posterior_odds_ratio_point_est()\n--------------------------------------------------------------------------------\nFailure ('test-task-5-subtask-1-tests.R:18:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p1, p0) not equivalent to 0.5307909.\n1/1 mismatches\n[1] 2.65 - 0.531 == 2.12\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90).\n\nFailure ('test-task-5-subtask-1-tests.R:24:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p0, p1) not equivalent to 1.876519.\n1/1 mismatches\n[1] 2.65 - 1.88 == 0.774\nError: Incorrect result for p0 = rbeta(100000, 5, 5), p1 = rbeta(100000, 5, 6).\n\nFailure ('test-task-5-subtask-1-tests.R:25:3'): posterior_odds_ratio_point_est()\nposterior_odds_ratio_point_est(p1, p0) not equivalent to 1.24902.\n1/1 mismatches\n[1] 2.65 - 1.25 == 1.4\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5).\n--------------------------------------------------------------------------------\n\n/ |         0 | task-6-subtask-1-tests                                          \n/ |         0 | posterior_odds_ratio_interval()                                 \nx | 6       2 | posterior_odds_ratio_interval()\n--------------------------------------------------------------------------------\nFailure ('test-task-6-subtask-1-tests.R:17:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p0, p1, 0.9) not equivalent to c(0.875367, 6.05911).\n2/2 mismatches (average diff: 0.719)\n[1] 0.68 - 0.875 == -0.196\n[2] 7.30 - 6.059 ==  1.242\nError: Incorrect result for p0 = rbeta(100000, 5, 95), p1 = rbeta(100000, 10, 90) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:19:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.9) not equivalent to c(0.1650407, 1.142378).\n2/2 mismatches (average diff: 3.34)\n[1] 0.68 - 0.165 == 0.515\n[2] 7.30 - 1.142 == 6.159\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:21:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.8) not equivalent to c(0.2086461, 0.9392956).\n2/2 mismatches (average diff: 3.42)\n[1] 0.68 - 0.209 == 0.471\n[2] 7.30 - 0.939 == 6.362\nError: Incorrect result for p1 = rbeta(100000, 5, 95), p0 = rbeta(100000, 10, 90) and 80%.\n\nFailure ('test-task-6-subtask-1-tests.R:27:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p0, p1, 0.9) not equivalent to c(0.2714472, 5.5970131).\n2/2 mismatches (average diff: 1.06)\n[1] 0.68 - 0.271 == 0.408\n[2] 7.30 - 5.597 == 1.705\nError: Incorrect result for p0 = rbeta(100000, 5, 5), p1 = rbeta(100000, 5, 6) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:29:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.9) not equivalent to c(0.1786667, 3.6839583).\n2/2 mismatches (average diff: 2.06)\n[1] 0.68 - 0.179 == 0.501\n[2] 7.30 - 3.684 == 3.618\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5) and 90%.\n\nFailure ('test-task-6-subtask-1-tests.R:31:3'): posterior_odds_ratio_interval()\nposterior_odds_ratio_interval(p1, p0, 0.8) not equivalent to c(0.252972, 2.633517).\n2/2 mismatches (average diff: 2.55)\n[1] 0.68 - 0.253 == 0.427\n[2] 7.30 - 2.634 == 4.668\nError: Incorrect result for p0 = rbeta(100000, 5, 6), p1 = rbeta(100000, 5, 5) and 80%.\n--------------------------------------------------------------------------------\nMaximum number of failures exceeded; quitting at end of file.\ni Increase this number with (e.g.) `testthat::set_max_fails(Inf)` \n\n== Results =====================================================================\nDuration: 0.4 s\n\n[ FAIL 15 | WARN 0 | SKIP 0 | PASS 17 ]\n== Terminated early ============================================================\n```\n:::\n:::\n\n\n\n:::\n::::\n",
    "supporting": [
      "template3_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}