{
  "hash": "cca02202af62bbe0917a6bf499f3179b",
  "result": {
    "markdown": "---\ntitle: \"Assignment 2\"\nauthor: anonymous # <-- hand in anonymously\nformat:\n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    number-sections: true\n    mainfont: Georgia, serif\n  pdf:\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\n    code-annotations: none\n    include-in-header:\n      text: |\n        % You can add TeX macros here for PDF,\n        % see https://quarto.org/docs/output-formats/pdf-basics.html#latex-includes\n        \\newcommand{\\BetaDist}{\\mathrm{Beta}}\neditor: source\n---\n\n\n\n\n::: {.hidden}\n$$\n% You can add TeX macros here for HTML, see https://quarto.org/docs/authoring/markdown-basics.html#equations\n\\renewcommand{\\BetaDist}{\\mathrm{Beta}}\n$$\n:::\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## Setup\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\n\nThis is the template for [assignment 2](assignment2.html). You can download the [qmd-file](https://avehtari.github.io/BDA_course_Aalto/assignments/template2.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.**\n\nThe following will set-up `markmyassignment` to check your functions at the end of the notebook:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(markmyassignment)\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment2.yml\", sep=\"\")\nset_assignment(assignment_path)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAssignment set:\nassignment2: Bayesian Data Analysis: Assignment 2\nThe assignment contain the following (3) tasks:\n- beta_point_est\n- beta_interval\n- beta_low\n```\n:::\n:::\n\n\n\nThe following installs the `aaltobda` package:\n\n\n::: {.cell hash='template2_cache/pdf/unnamed-chunk-2_39095ceb20f8b095ef973a8844a8881a'}\n\n```{.r .cell-code}\n# Caching should be fine here\ninstall.packages(\"aaltobda\", repos = c(\"https://avehtari.github.io/BDA_course_Aalto/\", getOption(\"repos\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nInstalling package into '/usr/local/lib/R/site-library'\n(as 'lib' is unspecified)\n```\n:::\n:::\n\n\n\n:::\n::::\n\n\n# Inference for binomial proportion\n\nLoading the library and the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aaltobda)\ndata(\"algae\")\n# The data are now stored in the variable `algae`.\n# These are the values for the prior required in the assignment\nprior_alpha = 2\nprior_beta = 10\n```\n:::\n\n\n\nThe below data is **only for the tests**, you need to change to the\nfull data `algae` when reporting your results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalgae_test <- c(0, 1, 1, 0, 0, 0)\n```\n:::\n\n\n\n\n\n## (a)\n\n\nWrite the likelihood, the prior and the posterior here!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# These are not the actual values for the posterior!\n# You will have to compute those from the data!\nposterior_alpha = 2\nposterior_beta = 10\n```\n:::\n\n\n\nYou can do [string interpolation](https://en.wikipedia.org/wiki/String_interpolation) using [R inline code execution in quarto](https://quarto.org/docs/computations/execution-options.html#knitr) as such:\n\n$\\alpha_\\text{prior}$ is **2** and $\\beta_\\text{prior}$ is **10**.\nOr string interpolation within math: $\\BetaDist(2,10)$\n\nThis template defines a `\\BetaDist` TeX command which renders `$\\BetaDist(1,2)$` as $\\BetaDist(1,2)$.\n\n\n\n## (b)\n\n\nKeep the below name and format for the functions to work with `markmyassignment`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: qbeta()\n\nbeta_point_est <- function(prior_alpha, prior_beta, data) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above,\n    # combined with the prior provided above.\n    0.2222222\n}\nbeta_interval <- function(prior_alpha, prior_beta, data, prob=0.9) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above,\n    # combined with the prior provided above.\n    c(0.0846451, 0.3956414)\n}\n```\n:::\n\n\n\n\n\n## (c)\n\n\nKeep the below name and format for the function to work with `markmyassignment`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: pbeta()\n\nbeta_low <- function(prior_alpha, prior_beta, data, pi_0=0.2) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above,\n    # combined with the correct prior.\n    0.4511238\n}\n```\n:::\n\n\n\n\n\n## (d)\n\n\nWrite your answer here!\n\n\n\n## (e)\n\n\nPlot the PDFs here. Explain shortly what you do.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful function: dbeta()\n```\n:::\n\n\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n\n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nv | F W S  OK | Context\n\n/ |         0 | task-1-subtask-1-tests                                          \n/ |         0 | beta_point_est()                                                \nx | 3       2 | beta_point_est()\n--------------------------------------------------------------------------------\nFailure ('test-task-1-subtask-1-tests.R:16:3'): beta_point_est()\nbeta_point_est(prior_alpha = alpha, prior_beta = beta, data = test) not equivalent to c(0.5).\n1/1 mismatches\n[1] 0.222 - 0.5 == -0.278\nError: Incorrect result for prior_alpha = 2, prior_beta = 4 and data = c(0, 1, 1, 0, 1, 1)\n\nFailure ('test-task-1-subtask-1-tests.R:23:3'): beta_point_est()\nbeta_point_est(prior_alpha = alpha, prior_beta = beta, data = test) not equivalent to c(0.5).\n1/1 mismatches\n[1] 0.222 - 0.5 == -0.278\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1)\n\nFailure ('test-task-1-subtask-1-tests.R:30:3'): beta_point_est()\nbeta_point_est(prior_alpha = alpha, prior_beta = beta, data = test) not equivalent to c(0.5555556).\n1/1 mismatches\n[1] 0.222 - 0.556 == -0.333\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1)\n--------------------------------------------------------------------------------\n\n/ |         0 | task-2-subtask-1-tests                                          \n/ |         0 | beta_interval()                                                 \nx | 3       2 | beta_interval()\n--------------------------------------------------------------------------------\nFailure ('test-task-2-subtask-1-tests.R:16:3'): beta_interval()\nbeta_interval(...) not equivalent to c(0.2712499, 0.7287501).\n2/2 mismatches (average diff: 0.26)\n[1] 0.0846 - 0.271 == -0.187\n[2] 0.3956 - 0.729 == -0.333\nError: Incorrect result for prior_alpha = 2, prior_beta = 4 and data = c(0, 1, 1, 0, 1, 1) and 90% interval.\n\nFailure ('test-task-2-subtask-1-tests.R:23:3'): beta_interval()\nbeta_interval(...) not equivalent to c(0.2999865, 0.7000135).\n2/2 mismatches (average diff: 0.26)\n[1] 0.0846 - 0.3 == -0.215\n[2] 0.3956 - 0.7 == -0.304\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1) and 90% interval.\n\nFailure ('test-task-2-subtask-1-tests.R:30:3'): beta_interval()\nbeta_interval(...) not equivalent to c(0.3640088, 0.7398856).\n2/2 mismatches (average diff: 0.312)\n[1] 0.0846 - 0.364 == -0.279\n[2] 0.3956 - 0.740 == -0.344\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1) and 90% interval.\n--------------------------------------------------------------------------------\n\n/ |         0 | task-3-subtask-1-tests                                          \n/ |         0 | beta_low()                                                      \nx | 3       2 | beta_low()\n--------------------------------------------------------------------------------\nFailure ('test-task-3-subtask-1-tests.R:16:3'): beta_low()\nbeta_low(...) not equivalent to c(0.5).\n1/1 mismatches\n[1] 0.451 - 0.5 == -0.0489\nError: Incorrect result for prior_alpha = 2, prior_beta = 4 and data = c(0, 1, 1, 0, 1, 1)\n\nFailure ('test-task-3-subtask-1-tests.R:23:3'): beta_low()\nbeta_low(...) not equivalent to c(0.5).\n1/1 mismatches\n[1] 0.451 - 0.5 == -0.0489\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1)\n\nFailure ('test-task-3-subtask-1-tests.R:30:3'): beta_low()\nbeta_low(...) not equivalent to 0.0004932497.\n1/1 mismatches\n[1] 0.451 - 0.000493 == 0.451\nError: Incorrect result for prior_alpha = 3, prior_beta = 5 and data = c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1)\n--------------------------------------------------------------------------------\n\n== Results =====================================================================\nDuration: 0.3 s\n\n[ FAIL 9 | WARN 0 | SKIP 0 | PASS 6 ]\n\nI believe in you!\n```\n:::\n:::\n\n\n\n:::\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}