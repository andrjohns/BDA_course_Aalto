{
  "hash": "289a59dd7c15bf363aac90f723bc1049",
  "result": {
    "markdown": "---\ntitle: \"Assignment 4\"\nauthor: anonymous # <-- hand in anonymously\nformat: \n  html:\n    toc: true\n    code-tools: true\n    code-line-numbers: true\n    standalone: true\n    self-contained: true\n    embed-resources: true  \n    number-sections: true\n    mainfont: Georgia, serif\n    page-layout: article\n  pdf:  \n    # documentclass: article\n    geometry:\n    - left=1cm,top=1cm,bottom=1cm,right=7cm\n    number-sections: true\nreference-location: margin\ncitation-location: margin \ncomments:\n  hypothesis: true\neditor: source\n---\n\n\n\n# General information\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n \n## Setup \n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\n\nThis is the template for [assignment 4](assignment4.html). You can download the [qmd-file](./template4.qmd) or copy the code from this rendered document after clicking on `</> Code` in the top right corner.\n\n**Please replace the instructions in this template by your own text, explaining what you are doing in each exercise.** \n\nThe following will set-up [`markmyassignment`](https://github.com/MansMeg/markmyassignment) to check your functions at the end of the notebook:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(markmyassignment)){\n    install.packages(\"markmyassignment\")\n    library(markmyassignment)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: markmyassignment\n```\n:::\n\n```{.r .cell-code}\nassignment_path = paste(\"https://github.com/avehtari/BDA_course_Aalto/\",\n\"blob/master/assignments/tests/assignment4.yml\", sep=\"\")\nset_assignment(assignment_path)    \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAssignment set:\nassignment4: Bayesian Data Analysis: Assignment 4\nThe assignment contain the following (4) tasks:\n- log_importance_weights\n- normalized_importance_weights\n- S_eff\n- posterior_mean\n```\n:::\n:::\n\n\nThe following installs and loads the `aaltobda` package:\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(aaltobda)){\n    install.packages(\"remotes\")\n    remotes::install_github(\"avehtari/BDA_course_Aalto\", subdir = \"rpackage\", upgrade=\"never\")\n    library(aaltobda)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: aaltobda\n```\n:::\n:::\n\nThe following installs and loads the [`latex2exp` package](https://github.com/stefano-meschiari/latex2exp), which allows us to use LaTeX in plots:\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!require(latex2exp)){\n    install.packages(\"latex2exp\")\n    library(latex2exp)\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: latex2exp\n```\n:::\n:::\n\n\n:::\n::::\n\n\n# Bioassay model \n\n### (a)\n\n\n### (b)\n\n\n**Loading the library and the data.**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: quantile()\n# and mcse_quantile() (from aaltobda)\n\ndata(\"bioassay_posterior\")\n# The 4000 draws are now stored in the variable `bioassay_posterior`.\n# The below displays the first rows of the data:\nhead(bioassay_posterior)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        alpha      beta\n1 -0.02050577 10.032841\n2  1.21738518  4.504546\n3  3.04829407 16.239424\n4  1.32272770  4.924268\n5  1.36274817 12.880561\n6  1.08593225  5.943731\n```\n:::\n:::\n\n\n\n# Importance sampling\n\n### (c)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Useful functions: bioassaylp (from aaltobda)\nalpha_test = c(1.896, -3.6,  0.374, 0.964, -3.123, -1.581)\nbeta_test = c(24.76, 20.04, 6.15, 18.65, 8.16, 17.4)\n\n\nlog_importance_weights <- function(alpha, beta) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(-8.95, -23.47, -6.02, -8.13, -16.61, -14.57)\n}\n```\n:::\n\n\n\n\n### (d)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnormalized_importance_weights <- function(alpha, beta) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(0.045, 0.000, 0.852, 0.103, 0.000, 0.000)\n}\n```\n:::\n\n\n\n\n### (e)\n\n\n**Write your answers and code here!**\n\n\n\n### (f)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nS_eff <- function(alpha, beta) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    1.354\n}\n```\n:::\n\n\n\n\n### (g)\n\n\n### (h)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nposterior_mean <- function(alpha, beta) {\n    # Do computation here, and return as below.\n    # This is the correct return value for the test data provided above.\n    c(0.503, 8.275)\n}\n```\n:::\n\n\n\n\n:::: {.content-hidden when-format=\"pdf\"}\n::: {.callout-warning collapse=false}\n\n## markmyassignment\n\n\n*This block will only be visible in your HTML output, but will be hidden when rendering to PDF with quarto for the submission.*\n**Make sure that this does not get displayed in the PDF!**\n    \n\n\nThe following will check the functions for which `markmyassignment` has been set up:\n \n\n::: {.cell}\n\n```{.r .cell-code}\nmark_my_assignment()    \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✔ | F W S  OK | Context\n\n⠏ |         0 | task-1-subtask-1-tests                                          \n⠏ |         0 | log_importance_weights()                                        \n✖ | 2       3 | log_importance_weights()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-1-subtask-1-tests.R:23:3'): log_importance_weights()\nlog_importance_weights(alpha, beta) not equivalent to c(...).\nLengths differ: 6 is not 10\nError: Incorrect result for alpha = c(4.5, 1.8, -2.4, 0.7, 0.3, -3.1, 0.4, 1.7, -0.5, -0.1) and beta = c(25.2, 7, -5.6, 1.1, 14.7, -6.5, 14.2, 25.9, 13.4, 19.8).\n\nFailure ('test-task-1-subtask-1-tests.R:31:3'): log_importance_weights()\nlog_importance_weights(alpha, beta) not equivalent to c(...).\nLengths differ: 6 is not 10\nError: Incorrect result for alpha = c(1.4, 1.5, -2.3, -2.3, -0.5, 1.9, 1.6, -1.8, -2.7, -1.9) and beta = c(11.4, 8.2, 10.8, 7.4, 18.2, 27.8, 5.1, 1.9, -15.7, 25.1).\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-2-subtask-1-tests                                          \n⠏ |         0 | normalized_importance_weights()                                 \n✖ | 2       3 | normalized_importance_weights()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-2-subtask-1-tests.R:23:3'): normalized_importance_weights()\nnormalized_importance_weights(alpha, beta) not equivalent to c(0.03, 0.44, 0, 0.01, 0.18, 0, 0.25, 0.04, 0.04, 0.01).\nLengths differ: 6 is not 10\nError: Incorrect result for alpha = c(4.5, 1.8, -2.4, 0.7, 0.3, -3.1, 0.4, 1.7, -0.5, -0.1) and beta = c(25.2, 7, -5.6, 1.1, 14.7, -6.5, 14.2, 25.9, 13.4, 19.8).\n\nFailure ('test-task-2-subtask-1-tests.R:31:3'): normalized_importance_weights()\nnormalized_importance_weights(alpha, beta) not equivalent to c(0.47, 0.42, 0, 0, 0, 0.01, 0.09, 0, 0, 0).\nLengths differ: 6 is not 10\nError: Incorrect result for alpha = c(1.4, 1.5, -2.3, -2.3, -0.5, 1.9, 1.6, -1.8, -2.7, -1.9) and beta = c(11.4, 8.2, 10.8, 7.4, 18.2, 27.8, 5.1, 1.9, -15.7, 25.1).\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-3-subtask-1-tests                                          \n⠏ |         0 | S_eff()                                                         \n✖ | 2       3 | S_eff()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-3-subtask-1-tests.R:23:3'): S_eff()\nS_eff(alpha, beta) not equivalent to 3.404.\n1/1 mismatches\n[1] 1.35 - 3.4 == -2.05\nError: Incorrect result for alpha = c(4.5, 1.8, -2.4, 0.7, 0.3, -3.1, 0.4, 1.7, -0.5, -0.1) and beta = c(25.2, 7, -5.6, 1.1, 14.7, -6.5, 14.2, 25.9, 13.4, 19.8).\n\nFailure ('test-task-3-subtask-1-tests.R:31:3'): S_eff()\nS_eff(alpha, beta) not equivalent to 2.448.\n1/1 mismatches\n[1] 1.35 - 2.45 == -1.09\nError: Incorrect result for alpha = c(1.4, 1.5, -2.3, -2.3, -0.5, 1.9, 1.6, -1.8, -2.7, -1.9) and beta = c(11.4, 8.2, 10.8, 7.4, 18.2, 27.8, 5.1, 1.9, -15.7, 25.1).\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | task-4-subtask-1-tests                                          \n⠏ |         0 | posterior_mean()                                                \n✖ | 2       3 | posterior_mean()\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-task-4-subtask-1-tests.R:23:3'): posterior_mean()\nposterior_mean(alpha, beta) not equivalent to c(1.111039, 11.854793).\n2/2 mismatches (average diff: 2.09)\n[1] 0.503 -  1.11 == -0.608\n[2] 8.275 - 11.85 == -3.580\nError: Incorrect result for alpha = c(4.5, 1.8, -2.4, 0.7, 0.3, -3.1, 0.4, 1.7, -0.5, -0.1) and beta = c(25.2, 7, -5.6, 1.1, 14.7, -6.5, 14.2, 25.9, 13.4, 19.8).\n\nFailure ('test-task-4-subtask-1-tests.R:30:3'): posterior_mean()\nposterior_mean(alpha, beta) not equivalent to c(1.458649, 9.67896).\n2/2 mismatches (average diff: 1.18)\n[1] 0.503 - 1.46 == -0.956\n[2] 8.275 - 9.68 == -1.404\nError: Incorrect result for alpha = c(1.4, 1.5, -2.3, -2.3, -0.5, 1.9, 1.6, -1.8, -2.7, -1.9) and beta = c(11.4, 8.2, 10.8, 7.4, 18.2, 27.8, 5.1, 1.9, -15.7, 25.1).\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 0.2 s\n\n[ FAIL 8 | WARN 0 | SKIP 0 | PASS 12 ]\n\nFrustration is a natural part of programming :)\n```\n:::\n:::\n\n\n:::\n::::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}